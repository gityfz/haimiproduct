<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j='http://jakarta.apache.org/log4j/'>

	<!-- 控制台输出 -->
	<appender name="myConsole" class="org.apache.log4j.ConsoleAppender">
	<!-- 设置通道名称：console和输出方式：org.apache.log4j.RollingFileAppender 
           其中输出方式appender有5种,分别为
           org.apache.log4j.ConsoleAppender (控制台)  
           org.apache.log4j.FileAppender (文件)
           org.apache.log4j.DailyRollingFileAppender (每天产生一个日志文件)
           org.apache.log4j.WriterAppender (将日志信息以流格式发送到任意指定的地方)
           org.apache.log4j.RollingFileAppender 文件大小到达指定尺寸的时候产生一个新的文件-->
        <param name="Target" value="System.out"/>
        <param name="Threshold" value="INFO"/>
      	<!--Threshold是个全局的过滤器，它将把低于所设置的level的信息过滤不显示出来-->
      	<!--level:是日记记录的优先级，优先级由高到低分为 
          OFF ,FATAL ,ERROR ,WARN ,INFO , ,ALL。
          Log4j建议只使用FATAL ,ERROR ,WARN ,INFO ,DEBUG这四个级别。-->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{dd HH:mm:ss,SSS\} %-5p] [%t] %c{2\} - %m%n" />
		</layout>
		<!--过滤器设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="info" />
			<param name="levelMax" value="error" />
			<param name="AcceptOnMatch" value="true" />   <!-- 定义可以接受的级别和不可以接受的级别 -->
		</filter>
	</appender>

	<!-- 文件输出 -->
	<appender name="myFile" class="org.apache.log4j.RollingFileAppender"  MaxFileSize="1024*1024*1024*30">
		<!-- 设置日志输出文件名 -->
		<param name="File" value="D:/output.log" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志。默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容  -->
		<param name="Append" value="true" />
		<!-- 日志文件上限 -->
		<param name="MaxBackupIndex" value="10" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%p (%c:%L)- %m%n" />
		</layout>
	</appender>

	<!-- 一天一个文件输出 -->
	<appender name="activexAppender" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="D:/activex.log" />
		<!-- <param name="File" value="${jboss.server.home.dir}/log/server.log"/> -->
		<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />
		<!-- Rollover at midnight each day
    	<param name="DatePattern" value="'.'yyyy-MM-dd"/> -->
    	<!-- Rollover at the top of each hour
    	<param name="DatePattern" value="'.'yyyy-MM-dd-HH"/> -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{MMdd HH:mm:ss SSS\} %-5p] [%t] %c{3\} - %m%n" />
		</layout>
	</appender>

	<!-- 指定logger的设置，additivity指示是否遵循缺省的继承机制  若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出 -->
	<logger name="com.intelligence" additivity="false">
		<priority value="info" />
		<appender-ref ref="activexAppender" />
		<appender-ref ref="myConsole" />
	</logger>

	<!-- c3p0 log4j配置
	<logger name="com.mchange.v2.resourcepool.BasicResourcePool" additivity="false">
		<priority value="info" />
		<appender-ref ref="activexAppender" />
		<appender-ref ref="myConsole" />
	</logger> -->

	<!-- 根logger的设置 -->
	<root>
		<priority value="info" />
		<appender-ref ref="myConsole" />
		<appender-ref ref="myFile" />
		<appender-ref ref="activexAppender" />
	</root>
</log4j:configuration>