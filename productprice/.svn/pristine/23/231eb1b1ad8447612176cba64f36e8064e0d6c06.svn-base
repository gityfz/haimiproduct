package com.intelligence.business.price.service.impl;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import com.intelligence.business.price.dao.PriceRateDao;
import com.intelligence.business.price.service.PriceRateService;
import com.intelligence.business.product.controller.ProductController;
import com.intelligence.common.log.LogUtils;

/**
 * 定时刷新汇率
 * @author 作者 E-mail:bzp
 * @date 创建时间：2017年1月10日 下午8:29:07
 * @version 1.0
 * @parameter
 * @since
 * @return
 */
@Service
@Component
public class PriceRateServiceImpl implements PriceRateService {

	@Resource
	private PriceRateDao priceRatedao;

	public static final String DEF_CHATSET = "UTF-8";
	public static final int DEF_CONN_TIMEOUT = 30000;
	public static final int DEF_READ_TIMEOUT = 30000;
    //public static String userAgent = "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.66 Safari/537.36";

	/**
	 * 日志
	 */
	public final static Logger logger = LoggerFactory
			.getLogger(ProductController.class);

	public void Currency() {
		String[] currency = { "USD", "JPY", "GBP", "AUD", "EUR", "KER" };
		for (int i = 0; i < currency.length; i++) {
			try {
				obtainRate(currency[i]);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	public void obtainRate(String fromCurrency) throws IOException {
		// 查询汇率
		String result = null;
		String url = "http://op.juhe.cn/onebox/exchange/currency";// 请求接口地址
		@SuppressWarnings("rawtypes")
		Map params = new HashMap();// 请求参数
		params.put("from", fromCurrency);// 转换汇率前的货币代码
		params.put("to", "CNY");// 转换汇率成的货币代码
		params.put("key", "fd9eed05c57c531c97a054a529dd203e");// 应用APPKEY(应用详细页查询)

		try {
			result = net(url, params, "GET");
			JSONObject object = JSONObject.fromObject(result);
			if (object.getInt("error_code") == 0) {
				JSONArray jsonArray = (JSONArray) object.get("result");
				JSONObject jo = jsonArray.getJSONObject(0);
				String m = (String) jo.getString("result");
				BigDecimal currency_rate = new BigDecimal(m);
				priceRatedao.updateRate(currency_rate, fromCurrency);
				logger.info(LogUtils.commonFormat("汇率以更新，当前汇率" + fromCurrency
						+ "=", currency_rate));
			} else {
				System.out.println(object.get("error_code") + ":"
						+ object.get("reason"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	/**
	 *
	 * @param strUrl
	 *            请求地址
	 * @param params
	 *            请求参数
	 * @param method
	 *            请求方法
	 * @return 网络请求字符串
	 * @throws Exception
	 */
	public static String net(String strUrl, Map params, String method)
			throws Exception {
		HttpURLConnection conn = null;
		BufferedReader reader = null;
		String rs = null;
		try {
			StringBuffer sb = new StringBuffer();
			if (method == null || method.equals("GET")) {
				strUrl = strUrl + "?" + urlencode(params);
			}
			URL url = new URL(strUrl);
			conn = (HttpURLConnection) url.openConnection();
			if (method == null || method.equals("GET")) {
				conn.setRequestMethod("GET");
			} else {
				conn.setRequestMethod("POST");
				conn.setDoOutput(true);
			}
			// conn.setRequestProperty("User-agent", userAgent);
			conn.setUseCaches(false);
			conn.setConnectTimeout(DEF_CONN_TIMEOUT);
			conn.setReadTimeout(DEF_READ_TIMEOUT);
			conn.setInstanceFollowRedirects(false);
			conn.connect();
			if (params != null && method.equals("POST")) {
				try {
					DataOutputStream out = new DataOutputStream(
							conn.getOutputStream());
					out.writeBytes(urlencode(params));
				} catch (Exception e) {
					// TODO: handle exception
				}
			}
			InputStream is = conn.getInputStream();
			System.out.println(is);
			reader = new BufferedReader(new InputStreamReader(is, DEF_CHATSET));
			String strRead = null;
			while ((strRead = reader.readLine()) != null) {
				sb.append(strRead);
			}
			rs = sb.toString();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (reader != null) {
				reader.close();
			}
			if (conn != null) {
				conn.disconnect();
			}
		}
		return rs;
	}

	// 将map型转为请求参数型
	public static String urlencode(Map<String, Object> data) {
		StringBuilder sb = new StringBuilder();
		for (Map.Entry i : data.entrySet()) {
			try {
				sb.append(i.getKey()).append("=")
						.append(URLEncoder.encode(i.getValue() + "", "UTF-8"))
						.append("&");
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
		}
		return sb.toString();
	}

}
