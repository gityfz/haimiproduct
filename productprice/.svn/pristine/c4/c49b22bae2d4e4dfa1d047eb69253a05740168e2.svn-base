package com.intelligence.business.product.controller;

import java.util.HashMap;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.intelligence.business.product.service.ISupplierService;
import com.intelligence.common.base.BaseController;
import com.intelligence.common.constant.StringCon;
import com.intelligence.common.exception.ErrorCode;
import com.intelligence.common.exception.PowerException;
import com.intelligence.common.log.LogUtils;
import com.intelligence.common.utils.NumUtils;

/**
 * 添加一条供应商信息
 * @author 作者 : bzp
 * @date 创建时间：2017年1月13日 上午11:28:07
 * @version 1.0
 * @parameter
 * @since
 * @return
 */

@Controller
@RequestMapping(value = "/supplier")
public class SupplierController extends BaseController {

	/**
	 * 日志
	 */
	public final static Logger logger = LoggerFactory
			.getLogger(SupplierController.class);

	/**
	 * 供应商业务层
	 */
	@Resource
	private ISupplierService iSupplierService;

	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public void addSupplier(HttpServletRequest request,
			HttpServletResponse response) {
		try {
			// 获取参数
			HashMap<String, Object> params = this.getMapParams(request,
					response);
			// 记录日志
			logger.info(LogUtils.commonFormat("添加一条供应商接口入参", params,
					"/supplier/add", "post"));
			// 校验入参
			String paramsMsg = StringCon.EMPTY_STR.getValue();

			if (!NumUtils.isNum(params.get("supplierName"))) {
				// 供应商名称
				paramsMsg = "supplierName";
			} else if (!NumUtils.isNum(params.get("supplierShortName"))) {
				// 供应商简称
				paramsMsg = "supplierShortName";
			} else if (!NumUtils.isNum(params.get("supplierType"))) {
				// 供应商类型
				paramsMsg = "supplierType";
			} else if (!NumUtils.isNum(params.get("contactPerson"))) {
				// 联系人姓名
				paramsMsg = "contactPerson";
			} else if (!NumUtils.isNum(params.get("contactPhone"))) {
				// 联系人电话
				paramsMsg = "contactPhone";
			} else if (!NumUtils.isNum(params.get("contactEmail"))) {
				// 联系人邮件
				paramsMsg = "contactEmail";
			} else if (!NumUtils.isNum(params.get("contactFax"))) {
				// 联系人传真
				paramsMsg = "contactFax";
			} else if (!NumUtils.isNum(params.get("accountBank"))) {
				// 开户行
				paramsMsg = "accountBank";
			} else if (!NumUtils.isNum(params.get("accountName"))) {
				// 开户名
				paramsMsg = "accountName";
			} else if (!NumUtils.isNum(params.get("accountCardNo"))) {
				// 开户卡号
				paramsMsg = "accountCardNo";
			} else if (!NumUtils.isNum(params.get("settleType"))) {
				// 结算方式
				paramsMsg = "settleType";
			} else if (!NumUtils.isNum(params.get("supplierAccount"))) {
				// 供应商账户名称
				paramsMsg = "supplierAccount";
			} else if (!NumUtils.isNum(params.get("supplierPass"))) {
				// 供应商账户密码
				paramsMsg = "supplierPass";
			} else if (!NumUtils.isNum(params.get("supplierAddress"))) {
				// 供应商地址
				paramsMsg = "supplierAddress";
			}
			if (!StringCon.EMPTY_STR.getValue().equals(paramsMsg)) {
				// 返回结果，参数错误
				this.sendResult(response, null, false, paramsMsg
						+ ErrorCode.PARAMS_FAIL.getErrorMessage(),
						ErrorCode.PARAMS_FAIL.getErrorCode());
			} else {
				// 新增商品
				Integer productId = iSupplierService.addSupplier(params);
				// 返回结果
				this.sendResult(response, productId);
			}

		} catch (PowerException e) {
			// TODO Auto-generated catch block
			if (logger.isDebugEnabled()) {
				e.printStackTrace();
			}
			this.sendResult(response, null, false, e.getErrorMsg(),
					e.getErrorCode());
		}

	}

}
